@page "/authors/details/{id:int}"
@inject IAuthorService authorService
@inject NavigationManager navManager

<h3>Author Details</h3>
<EditForm Model="Author">
    <fieldset disabled="true">
        <div class="form-group">
            <label for="email">First Name</label>
            <InputText class="form-control" @bind-Value="Author.FirstName" id="firstname"/>
            <ValidationMessage For="@(() => Author.FirstName)" />
        </div>
        <br/>
        <div class="form-group">
            <label for="email">Last Name</label>
            <InputText class="form-control" @bind-Value="Author.LastName" id="lastname"/>
            <ValidationMessage For="@(() => Author.LastName)" />
        </div>
        <br/>
        <div class="form-group">
            <label for="bio">Biography</label>
            <InputText class="form-control" @bind-Value="Author.Bio" id="bio"/>
            <ValidationMessage For="@(() => Author.Bio)" />
        </div>
        <br/>
    </fieldset>

    @if(Author.Books == null || Author.Books.Any() == false)
    {
        <div class="alert alert-alert-dismissible alert-secondary">
            No books for this author
        </div>
    }
    else
    {
        <div class="row">
            @foreach(var book in Author.Books)
            {
                <div class="col-3">
                    <div class="card" style="width: 18rem;">
                        <img src="@book.Image" class="card-img-top" alt="@book.Title">
                        @*<img src="@book.Image" class="card-img-top" alt="@book.Title" style="width:286px; height:164px">*@
                        <div class="card-body">
                            <h5 class="card-title">@book.Title - @book.Price.ToString("C")</h5>
                            <p class="card-text"></p>
                            <a href="/books/details/@book.Id" class="btn btn-primary">View Book</a>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    <button @onclick="GotToEdit" class="btn btn-warning">
        <span class="oi oi-save"></span>Edit Author
    </button>
    <button @onclick="BackToList" type="button" class="btn btn-outline-secondary">
        <span class="oi oi-media-skip-backward"></span>Back To List
    </button>
</EditForm>

@code {
    [Parameter]
    public int id { get; set; }

    private AuthorDetailsDto Author = new AuthorDetailsDto();

    protected async override Task OnInitializedAsync()
    {
        var response = await authorService.Get(id);
        if (response.Success)
        {
            Author = response.Data;
        }
    }

    private void BackToList()
    {
        navManager.NavigateTo("/authors/");
    }

    private void GotToEdit()
    {
        navManager.NavigateTo($"/authors/update/{Author.Id}");
    }
}
